
@model JsonDemo.Models.Photo

@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm("Edit", "Photos", FormMethod.Post, new { @id = "editForm" }))
{
    @Html.AntiForgeryToken()

    <div id="content">
        <div id="">
            <div id="">
                <div class="photoDetailsOwner">
                    <div class="UserSmallAvatar" style="background-image:url(@Model.Owner.Avatar)" title="@Model.Owner.Name"></div>
                    @Model.Owner.Name
                </div>
                <hr />
                <div class="photo-form">
                    <fieldset>
                        <legend>Informations</legend>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Title) } })
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Description), rows = 5 })
                        <div style="display:grid; grid-template-columns:1em auto; gap:8px; align-items:center">
                            @Html.CheckBoxFor(model => model.Shared, new { @class = "form-check-input" })
                            <label for="Shared">Partagée</label>
                        </div>
                    </fieldset>
                    <fieldset>
                        <legend>Photo</legend>
                        <div class="form-group"
                             id="Image_DropZone"
                             style="display: flex; flex-direction: column; align-items: center; border-radius: 6px; padding: 6px 6px 3px 0px; border: 2px dashed #ccc;"
                             ondrop="handleDrop(event)"
                             ondragover="handleDragOver(event)">

                            <img id="Image_UploadedImage"
                                 class="UploadedImage"
                                 src="@(!string.IsNullOrEmpty(Model.Image) ? Model.Image : "/App_Assets/Photos/No_Image.png")"
                                 alt="Cliquez glisser une photo"
                                 style="width: 100%; cursor: pointer; border-radius: 6px;" />

                            <input id="Image_FileInput"
                                   type="file"
                                   name="ImageFile"
                                   style="visibility: hidden; height: 0px; width: 0px; border: none; margin: 0px !important;"
                                   accept="image/jpeg,image/jpg,image/gif,image/png,image/bmp,image/webp,image/avif,image/svg" />

                            <input type="hidden"
                                   id="Image"
                                   name="Image"
                                   value="@(!string.IsNullOrEmpty(Model.Image) ? Model.Image : "/App_Assets/Photos/No_Image.png")" />
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const fileInput = document.getElementById("Image_FileInput");
            const previewImage = document.getElementById("Image_UploadedImage");
            const hiddenInput = document.getElementById("Image");
            const dropZone = document.getElementById("Image_DropZone");

            previewImage.addEventListener("click", function () {
                fileInput.click();
            });

            fileInput.addEventListener("change", function (event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        previewImage.src = e.target.result; 
                        hiddenInput.value = e.target.result; 
                    };
                    reader.readAsDataURL(file);
                }
            });

            dropZone.addEventListener("dragover", function (event) {
                event.preventDefault();
                dropZone.style.borderColor = "#00aaff"; 
            });

            dropZone.addEventListener("dragleave", function () {
                dropZone.style.borderColor = "#ccc"; 
            });

            dropZone.addEventListener("drop", function (event) {
                event.preventDefault();
                dropZone.style.borderColor = "#ccc"; 

                const file = event.dataTransfer.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        previewImage.src = e.target.result; 
                        hiddenInput.value = e.target.result; 
                    };
                    reader.readAsDataURL(file);
                }
            });
        });
    </script>
}