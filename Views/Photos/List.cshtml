
@model IEnumerable<JsonDemo.Models.Photo>
@{
    ViewBag.Title = "Liste des photos";
    var connectedUser = (JsonDemo.Models.User)Session["ConnectedUser"];
}

<div class='photosLayout'>

    @foreach (var photo in Model)
    {
        if (connectedUser.IsAdmin || photo.Shared)
        {
            <div class="photoLayout">
                <div class="photoTitleContainer" title="@photo.Description">
                    <div class="photoTitle ellipsis">@photo.Title</div>
                </div>
                <a href="/Photos/Details/@photo.Id" title="Afficher les détails de @photo.Title">
                    <div class="photoImage" style="background-image:url('@photo.Image')">
                        <div class="UserSmallAvatar transparentBackground" style="background-image: url('@photo.Owner.Avatar')" title="@photo.Owner.Name"></div>
                        @if (photo.Shared && connectedUser.IsAdmin)
                        {
                            <div class="UserSmallAvatar transparentBackground" style="background-image:url('/Content/UI-Images/shared.png')" title="partagée"></div>
                        }
                    </div>
                    <div class="photoCreationDate">

                        @Helper.When(photo.CreationDate)
                        <div class="likesSummary">
                            @photo.Likes.Count
                            <i class="cmdIconSmall fa-regular fa-thumbs-up"></i>
                        </div>
                    </div>
                </a>
            </div>
        }
    }
</div>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(() => {
            let PhotosPanel = new AutoRefreshedPanel("PhotosPanel", "/Photos/GetPhotos", GPRR, attachEvent);

            var timeout = null;
            $('#searchToken').keyup(function () {
                clearTimeout(timeout);
                timeout = setTimeout(() => {
                    PhotosPanel.command("/Photos/SetSearchKeywords?keywords=" + $(this).val());
                }, 1000);
            });

            function attachEvent() {
                $("#PhotosPanel .fa-thumbs-up").click(function (e) {
                    PhotosPanel.command("/Photos/TogglePhotoLike/" + $(this).attr("photoId"));
                    e.preventDefault();
                });
            }
            $('#searchToken').change(function () {
                PhotosPanel.command("/Photos/SetSearchKeywords?keywords=" + $(this).val());
            });
            $('#searchToken').on("search", function () {
                PhotosPanel.command("/Photos/SetSearchKeywords?keywords=" + $(this).val());
            });
            // ascending sort of select option values
            /*$("#SelectedUser").html($("#SelectedUser option").sort(function (a, b) {
                return a.text == b.text ? 0 : a.text > b.text ? 1 : -1
            }))*/
            $('#SelectedUser').change(function () {
                PhotosPanel.command("/Photos/SetPhotoOwnerSearchId?id=" + $(this).val());
            })

            $("#SelectedUser option").each(function () {
                //$(this).text($(this).text().slice($(this).text().indexOf("-")+2));
            });
        })
    </script>
}
